;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/7/2021
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;#include<delay.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0022 // Declare your local variables here
; 0000 0023 int arr[8]={0b00000001,0b00000010,
; 0000 0024 0b00000100,0b00001000,
; 0000 0025 0b00010000,0b00100000,0b01000000,0b10000000};
; 0000 0026 int arr1[10]={0b00111111,0b10000110,0b11011011,0b11001111,0b11100110,0b11101101,0b11111101,0b10000111,0b11111111,0b11101111};
; 0000 0027 int i=0;
; 0000 0028 int j=0;
; 0000 0029 int k=0;
; 0000 002A // Input/Output Ports initialization
; 0000 002B // Port A initialization
; 0000 002C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002E 
; 0000 002F DDRA=0b01111111;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	arr -> Y+20
;	arr1 -> Y+0
;	i -> R16,R17
;	j -> R18,R19
;	k -> R20,R21
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0030 
; 0000 0031 // Port B initialization
; 0000 0032 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0033 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0034 
; 0000 0035 DDRB=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0036 
; 0000 0037 // Port C initialization
; 0000 0038 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0039 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003A 
; 0000 003B DDRC=0b11111111;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 003C 
; 0000 003D // Port D initialization
; 0000 003E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0040 
; 0000 0041 DDRD=0b00000011;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0042 // Timer/Counter 0 initialization
; 0000 0043 // Clock source: System Clock
; 0000 0044 // Clock value: Timer 0 Stopped
; 0000 0045 // Mode: Normal top=0xFF
; 0000 0046 // OC0 output: Disconnected
; 0000 0047 TCCR0=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0048 TCNT0=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0049 OCR0=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 004A 
; 0000 004B // Timer/Counter 1 initialization
; 0000 004C // Clock source: System Clock
; 0000 004D // Clock value: Timer1 Stopped
; 0000 004E // Mode: Normal top=0xFFFF
; 0000 004F // OC1A output: Discon.
; 0000 0050 // OC1B output: Discon.
; 0000 0051 // Noise Canceler: Off
; 0000 0052 // Input Capture on Falling Edge
; 0000 0053 // Timer1 Overflow Interrupt: Off
; 0000 0054 // Input Capture Interrupt: Off
; 0000 0055 // Compare A Match Interrupt: Off
; 0000 0056 // Compare B Match Interrupt: Off
; 0000 0057 TCCR1A=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0058 TCCR1B=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0059 TCNT1H=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005A TCNT1L=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 005B ICR1H=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 005C ICR1L=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 005D OCR1AH=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 005E OCR1AL=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 005F OCR1BH=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0060 OCR1BL=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0061 
; 0000 0062 // Timer/Counter 2 initialization
; 0000 0063 // Clock source: System Clock
; 0000 0064 // Clock value: Timer2 Stopped
; 0000 0065 // Mode: Normal top=0xFF
; 0000 0066 // OC2 output: Disconnected
; 0000 0067 ASSR=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0068 TCCR2=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0069 TCNT2=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 006A OCR2=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 006B 
; 0000 006C // External Interrupt(s) initialization
; 0000 006D // INT0: Off
; 0000 006E // INT1: Off
; 0000 006F // INT2: Off
; 0000 0070 MCUCR=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0071 MCUCSR=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0072 
; 0000 0073 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0074 TIMSK=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0075 
; 0000 0076 // USART initialization
; 0000 0077 // USART disabled
; 0000 0078 UCSRB=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0079 
; 0000 007A // Analog Comparator initialization
; 0000 007B // Analog Comparator: Off
; 0000 007C // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 007D ACSR=0x80;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 007E SFIOR=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 007F 
; 0000 0080 // ADC initialization
; 0000 0081 // ADC disabled
; 0000 0082 ADCSRA=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0083 
; 0000 0084 // SPI initialization
; 0000 0085 // SPI disabled
; 0000 0086 SPCR=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0087 
; 0000 0088 // TWI initialization
; 0000 0089 // TWI disabled
; 0000 008A TWCR=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 008B 
; 0000 008C // Alphanumeric LCD initialization
; 0000 008D // Connections specified in the
; 0000 008E // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 008F // RS - PORTB Bit 0
; 0000 0090 // RD - PORTB Bit 1
; 0000 0091 // EN - PORTB Bit 2
; 0000 0092 // D4 - PORTB Bit 4
; 0000 0093 // D5 - PORTB Bit 5
; 0000 0094 // D6 - PORTB Bit 6
; 0000 0095 // D7 - PORTB Bit 7
; 0000 0096 // Characters/line: 8
; 0000 0097 lcd_init(16);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0098 
; 0000 0099 while (1)
;PCODE: $00000058 VOL: 0
; 0000 009A       { PINA.7=1;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 009B 
; 0000 009C       PORTD=0b00000000;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 009D         if(PINA.7==0)
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 009E         {
; 0000 009F         if(i<3)
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 00A0          {
; 0000 00A1             PORTA=arr[i++];
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 00A2             PORTC=arr1[j++];
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00A3 
; 0000 00A4 
; 0000 00A5             delay_ms(500);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 00A6 
; 0000 00A7          }
; 0000 00A8         /* for(k=0;k<11;k++)
; 0000 00A9         {
; 0000 00AA          lcd_gotoxy(k,0);
; 0000 00AB          lcd_puts("Hello");
; 0000 00AC          delay_ms(500);
; 0000 00AD          lcd_clear();
; 0000 00AE         }
; 0000 00AF         for(k=0;k<11;k++)
; 0000 00B0         {
; 0000 00B1          lcd_gotoxy(11-k,0);
; 0000 00B2          lcd_puts("Hello");
; 0000 00B3          delay_ms(500);
; 0000 00B4          lcd_clear();
; 0000 00B5         } */
; 0000 00B6 
; 0000 00B7 
; 0000 00B8         }
;PCODE: $00000076 VOL: 0
; 0000 00B9 
; 0000 00BA 
; 0000 00BB 
; 0000 00BC         if(i==3)
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00BD         {
; 0000 00BE         i=0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00BF         }
; 0000 00C0         if(j==10)
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00C1         {
; 0000 00C2          j=0;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00C3         }
; 0000 00C4 
; 0000 00C5 
; 0000 00C6 
; 0000 00C7 
; 0000 00C8       }
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00C9 }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
